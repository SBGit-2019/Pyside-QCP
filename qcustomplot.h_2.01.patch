--- qcustomplot.h	2019-11-21 08:02:06.900810564 +0100
+++ /home/mr/pyside/qcustomplot-source/qcustomplot.h	2018-06-25 01:05:11.000000000 +0200
@@ -57,12 +57,6 @@
 #include <QtGui/QWheelEvent>
 #include <QtGui/QPixmap>
 #include <QtCore/QVector>
-// PYSIDE2-FIX
-#include <QCborStreamReader>
-#include <QtCore/QList>
-#include <QtCore/QVariant>
-#include <QtGui/QPaintDevice>
-// END PYSIDE2-FIX
 #include <QtCore/QString>
 #include <QtCore/QDateTime>
 #include <QtCore/QMultiMap>
@@ -938,10 +932,8 @@
 class QCP_LIB_DECL QCPDataSelection
 {
 public:
-// PYSIDE2-FIX  explicit QCPDataSelection();
-// PYSIDE2-FIX  explicit QCPDataSelection(const QCPDataRange &range);
-  QCPDataSelection();
-  QCPDataSelection(const QCPDataRange &range);
+  explicit QCPDataSelection();
+  explicit QCPDataSelection(const QCPDataRange &range);
   
   bool operator==(const QCPDataSelection& other) const;
   bool operator!=(const QCPDataSelection& other) const { return !(*this == other); }
@@ -2229,8 +2221,7 @@
 Q_DECLARE_METATYPE(QCPAxis::SelectablePart)
 
 
-// PYSIDE2-FIX
-class QCP_LIB_DECL QCPAxisPainterPrivate
+class QCPAxisPainterPrivate
 {
 public:
   explicit QCPAxisPainterPrivate(QCustomPlot *parentPlot);
@@ -3346,8 +3337,7 @@
   void setSelectionDecorator(QCPSelectionDecorator *decorator);
 
   // introduced virtual methods:
-  // PYSIDE2-FIX virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=0) const Q_DECL_OVERRIDE = 0; // actually introduced in QCPLayerable as non-pure, but we want to force reimplementation for plottables
-  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=0) const Q_DECL_OVERRIDE {return 0.0;}
+  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=0) const Q_DECL_OVERRIDE = 0; // actually introduced in QCPLayerable as non-pure, but we want to force reimplementation for plottables
   virtual QCPPlottableInterface1D *interface1D() { return 0; }
   virtual QCPRange getKeyRange(bool &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) const = 0;
   virtual QCPRange getValueRange(bool &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, const QCPRange &inKeyRange=QCPRange()) const = 0;
@@ -3546,8 +3536,7 @@
   Q_SLOT void setSelected(bool selected);
   
   // reimplemented virtual methods:
-  // PYSIDE2-FIX virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=0) const Q_DECL_OVERRIDE = 0;
-  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=0) const Q_DECL_OVERRIDE {return 0.0;};
+  virtual double selectTest(const QPointF &pos, bool onlySelectable, QVariant *details=0) const Q_DECL_OVERRIDE = 0;
   
   // non-virtual methods:
   QList<QCPItemPosition*> positions() const { return mPositions; }
@@ -3649,8 +3638,7 @@
   QCP::AntialiasedElements antialiasedElements() const { return mAntialiasedElements; }
   QCP::AntialiasedElements notAntialiasedElements() const { return mNotAntialiasedElements; }
   bool autoAddPlottableToLegend() const { return mAutoAddPlottableToLegend; }
-  // PYSIDE2-FIX
-  QCP::Interactions interactions() const { return mInteractions; }
+  const QCP::Interactions interactions() const { return mInteractions; }
   int selectionTolerance() const { return mSelectionTolerance; }
   bool noAntialiasingOnDrag() const { return mNoAntialiasingOnDrag; }
   QCP::PlottingHints plottingHints() const { return mPlottingHints; }
@@ -5034,8 +5022,7 @@
 /* commit ce344b3f96a62e5f652585e55f1ae7c7883cd45b 2018-06-25 01:03:39 +0200 */
 
 
-// PYSIDE2-FIX
-class QCP_LIB_DECL QCPColorScaleAxisRectPrivate : public QCPAxisRect
+class QCPColorScaleAxisRectPrivate : public QCPAxisRect
 {
   Q_OBJECT
 public:
